// Overwrite Concept
// =============================================
//   mobile  |  tablet  |  web  |  wide-screen
// ---------------------------------------------
//   <------------------------------------> md{{no prefix}}
//                              |---------> lg
//           |<-------->|                   sm
//   <-------|                              xs
// =============================================
$responsive-classes: 'xs', 'sm', 'md', 'lg';
$responsive-xs:      nth($responsive-classes, 1);
$responsive-sm:      nth($responsive-classes, 2);
$responsive-md:      nth($responsive-classes, 3);
$responsive-lg:      nth($responsive-classes, 4);

$type-list:   'width', 'offset', 'hide', 'first', 'last', 'start', 'center', 'end';
$type-width:  nth($type-list, 1);
$type-offset: nth($type-list, 2);
$type-hide:   nth($type-list, 3);
$type-first:  nth($type-list, 4);
$type-last:   nth($type-list, 5);
$type-start:  nth($type-list, 6);
$type-center: nth($type-list, 7);
$type-end:    nth($type-list, 8);

@mixin gen-grid-classes($class, $columns:$grid-columns) {
  $prefix: $global-prefix + '-' + $class;

  @if $class == $responsive-md {
    $prefix: $global-prefix;
  }

  @for $i from 1 through $columns {
    // $type == $type-width
    .#{$prefix}-#{$i} {
      width: percentage($i / $columns);
      @include flex-basis(percentage($i / $columns));
    }

    // $type == $type-offset
    .#{$prefix}-#{$type-offset}-#{$i} {
      margin-left: percentage($i / $columns);
    }
  }

  // $type == $type-hide
  .#{$prefix}-#{$type-hide} {
    display: none;
  }

  // $type == $type-first
  .#{$prefix}-#{$type-first} {
    @include order(-1);
  }

  // $type == $type-last
  .#{$prefix}-#{$type-last} {
    @include order(1);
  }

  // $type == $type-start
  .#{$prefix}-#{$type-start} {
    @include align-self(flex-start);
  }

  // $type == $type-center
  .#{$prefix}-#{$type-center} {
    @include align-self(center);
  }

  // $type == $type-end
  .#{$prefix}-#{$type-end} {
    @include align-self(flex-end);
  }
}


// (md)Medium grid: default state
// =============================================
  .#{$global-prefix}-container {
    width: $container-width-md;
    margin-left: auto;
    margin-right: auto;
  }
  @include gen-grid-classes($responsive-md);



// (lg)Large grid
// =============================================
@media screen
 and (min-width: $breakpoint-lg) {
  .#{$global-prefix}-container {
    width: $container-width-lg;
  }
  @include gen-grid-classes($responsive-lg);
}


// (sm)Small grid
// =============================================
@media screen
 and (min-width: $breakpoint-sm)
 and (max-width: $breakpoint-md - 1) {
  .#{$global-prefix}-container {
    width: $container-width-sm;
  }
  @include gen-grid-classes($responsive-sm);
}


// (xs)Extra small grid
// =============================================
@media screen
 and (max-width: $breakpoint-sm - 1) {
  .#{$global-prefix}-container {
    width: 100%;
    padding-left: $unit-size;
    padding-right: $unit-size;
    overflow-x: hidden;
  }
  @include gen-grid-classes($responsive-xs);
}
